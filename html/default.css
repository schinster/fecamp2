@charset "utf-8";
/* html reset */
header,
footer,
section,
article,
nav,
aside,
main,
figure,
figcaption{
	display: block;
}
html,
body{
	min-height: 100%;
}
body{
	margin: 0px;
	min-width: 320px;/*현존하는 단말기의 최소 너비*/
}
body,
table,
button,
input,
textarea,
select{
	font-size: 14px;
}
/*body에 적용한 폰트사이즈는 밑에서 상속하지만, table~select는 상속하지 않기 때문에 저렇게 써준다.*/

/* All */

body{
	background-image: -webkit-linear-gradient(#ccc, #fff);
	background-image: -moz-linear-gradient(#ccc, #fff);
	background-image: -ms-linear-gradient(#ccc, #fff);
	background-image: -o-linear-gradient(#ccc, #fff);
	background-image: linear-gradient(#ccc, #fff);
}

.header>h1{
	font-size: 28px;
	font-weight: 700;
	text-shadow: 1px 1px 0px #fff, -1px -1px 0 #0f0;
}

.search>input{
	vertical-align: top;
	border-radius: 15px 1px 1px 1px;
}

.search>input[type="search"]{
	border: 1px solid #0f0;
	height: 32px;
	width: 160px;
	box-shadow: 0 0 6px #ccc inset;
}

.search>input[type="submit"]{
	width: 40px;
	height: 32px;
	background: #fff;
	border: 1px solid #ccc;
	box-shadow: 0 0 6px #aaa;
	margin-left: 10px;
}

main,
.lnb,
.aside{
	margin-bottom: 15px;
}

main{
	background: #fff;
	box-shadow: 0 0 4px #999;/*ie 7, 8 브라우저를 위해 써준 그림자 값*/
	box-shadow: 0 0 4px rgba(0, 0, 0, .3); /* ie 8 이상의 브라우저는 알파값 인식하기 때문에 밑에서 오버라이드*/
	border-radius: 8px;
	min-height: 300px;
}

.lnb ul,
.aside ul{
	margin: 0;
	padding: 0;
	list-style: none;
}

.lnb{
	text-shadow: 1px 1px 0 #333;
}

.lnb h2{
	background: #666;
	border-radius: 4px 4px 0 0;
	font-size: 14px;
	color: #fff;
	padding: 0 10px;
	line-height: 32px; /*padding 상하를 주지 않고 라인 하이트로 한다*/
	margin: 0;
}

.lnb li{
	margin: 1px 0;
}

.lnb a{
	display: block;
	background: #777;
	padding: 0 10px;
	line-height: 32px; /*접근성을 위해 최소높이 32픽셀을 지정한다*/
	text-decoration: none;
	color: #fff;
	-webkit-transition: .2s;
	-moz-transition: .2s;
	-ms-transition: .2s;
	-o-transition: .2s;
	transition: .2s;
}

.lnb li:last-child>a{
	border-radius: 0 0 4px 4px;
}
/*
상기 코드는 아래 두 개와 모두 같다.
.lnb :last-child>a{
	border-radius: 0 0 4px 4px;
}

.lnb *:last-child>a{
	border-radius: 0 0 4px 4px;
}
*/
.lnb a:hover,
.lnb a:focus{
	background: #555;
}
.aside{
	border: 1px solid #ddd;
	border-radius: 4px;
	padding: 0 10px;
	background: #fff;
}
.aside h2{
	font-size: 14px;
	margin: 0;
	border-bottom: 1px solid #ddd;
	line-height: 32px;
}
.aside ul{
	padding: 10px 0px;
}
.aside a{
	display: block;
	line-height: 32px;
}
.footer{
	border-top: 1px dotted #ccc;
}
.footer>p{
	text-align: center;
	color: #959595;
}

/* Mobile */
.container{
	margin: 0 10px;
}
.skip{
	display: none;
}
/*display: none은 화면에서도 안 보이고 낭독기에서도 안 읽힌다. 모바일에서는 맹인은 손가락으로 메뉴 만지면 읽힌다.*/
.gnb>h2{
	height: 1px;
	position: absolute;
	overflow: hidden;
	margin: 0;
}
/*absolute 처리해서 밑의 내용들이 1픽셀 밀려나가는 일이 없도록, 1px이라도 주는 이유는 면적이 조금이라도 있
어야 낭독기가 놓치지 않을듯 하여*/
.gnb>button{
	border:0;
	background: #666 url(xxx.jpg) no-repeat;
	width: 40px;
	height: 36px;
	padding: 36px 0 0 0;
	overflow: hidden;/*화면 낭독기에서 읽어주기 위해 '메뉴열기'라는 글자를 지우면 안 된다.
	그래서 높이를 36주고 패딩을 36줌으로써 글자를 밖으로 밀어냈다. 그 후 오버플로우히든으로 감춘다.*/
	border-radius: 3px;
	position: absolute;/*병장마크의 포지션을 위해*/
	cursor: pointer;
	top: 15px;
	right: 10px;
}
/*버튼의 박스 사이징은 '보더 박스' 사이즈다. 그러므로 높이값 속에 패팅값이 뭍힌다. input도 이러한 성질을 갖는다*/

.gnb>button:before{
	content:"";
	position: absolute;
	top: 4px;
	left: 4px;
	width: 32px;
	height: 4px;
	border-top: 12px double #fff;
	border-bottom: 12px double #fff;
}
/*
.gnb>button:after{
	content:"";
	position: absolute;
	top: 4px;
	left: 4px;
	width: 32px;
	height: 4px;
	background: #fff;
}
*/
.gnb>ul{
background: #666;
border-radius: 4px;
overflow: hidden;
/*display: none; /*첫화면에서 메뉴가 닫혀있도록하기 위해*/
}

.gnb ul{
	margin: 0;
	padding: 0;
	list-style: none;
}

.gnb a{
	display: block;
	background: #666;
	color: #fff;
	line-height: 32px;/*웹접근성이 요구하는 최소 높이*/
	text-decoration: none;
	padding: 0 10px;
	white-space: nowrap;/*메뉴의 이름을 길게 바꿨을 때 줄임말로 바꿔주는 기능.
	공백이 생기더라도 랩핑을 하지마라는 뜻. 원래는 단어 사이의 공백을 기준으로 줄바꿈을 하게 되어있다.
	즉 아무리 긴 텍스트도 줄바꿈 없이 그냥 한 줄로 만들어주는 기능*/
	overflow: hidden;
	text-overflow: ellipsis;/*블록에서만 적용된다. 반드시 오버플로우히든이 위에서 선언되어야 한다. */
}

.gnb>ul>li>a{
	background: #444;
}
.gnb li li{
	border-top: 1px dotted #444;
}
.gnb li li:first-child{
	border: 0;
}
/*first child는 부모를 기준의 첫번째 자식을 선택한다
참고로 여기서는 .gnb li li는 .gnb>ul>li>ul>li와 같다.*/

.search{
	margin: 15px 0;
	padding: 0 60px 0 0;
	position: relative; /*자식 요소(밑에 input[type={submit}])가 absolute의 기준을 삼기위해*/
}
.search>input[type="search"]{
	display: block;
	width: 100%;/*부모가 나에게 준 영역의 100프로를 사용해라. 여기서는 패딩값을 제외한 나머지를 다 쓰게 된다.*/
}
.search>input[type="submit"]{
	width: 50px;
	position: absolute;
	top: 0;
	right: 0;
}

/*미디어쿼리를 지원하지 않는 모바일 기기가 있기 때문에 모바일쪽은 미디어 쿼리 없이 작성*/

/* Tablet & Desktop */
@media (min-width: 768px){
	.gnb>button{
		display: none;
	}
	.search{
		position: absolute;
		top: 20px;
		right: 10px;
		margin: 0;
		width: 200px;
	}
	/*써치바를 우측 상단으로 붙이는 의미*/
	.gnb{
		margin-bottom: 15px;
		position: relative;/*서브메뉴의 오프셋의 기준이 되기 위해*/
	}
	.gnb>ul{
		display: block !important;/*상기 코드에서 display:none이 있는데(풀다운 했다가 올라가는 메뉴) 태블릿 사이즈에서 무조건 보이게 하기 위해*/
		height: 40px;
		border-bottom: 40px solid #fff;
		padding: 0 0 0 25px;/*메뉴1의 왼쪽부분의 여유를 준다*/
		overflow: visible;/*상기 모바일 코드에서 .gnb>ul쪽에서 오버플로우 히든이 있다*/
		background: -webkit-linear-gradient(#555 0%, #333 50%, #000 50%, #222 100%);
		background: -moz-linear-gradient(#555 0%, #333 50%, #000 50%, #222 100%);
		background: -ms-linear-gradient(#555 0%, #333 50%, #000 50%, #222 100%);
		background: -o-linear-gradient(#555 0%, #333 50%, #000 50%, #222 100%);
		background: linear-gradient(to bottom, #555 0%, #333 50%, #000 50%, #222 100%);
	}
	/*to bottom은 생략할 수 있다. 기본값이다.*/
	.gnb ul ul{
		display: none;
	}
	.gnb>ul>li{
		float: left;
	}
	.gnb a{
		background: none !important;
	}
	.gnb>ul>li>a{
		line-height: 40px;
		padding: 0 25px;
	}
	.gnb>ul>.active>a{
		background: #fff !important;
		color: #000;
		font-weight: 700;
		margin-top: 4px;
		line-height: 37px;/*원래 40픽셀이니까 4픽셀 움직인만큼 보정해주는 값. 
		그러나 단순히 36픽셀이 아니고 더 정교하게 해야 한다. 36의 중간과 40의 중간은 다르기 때문.
		그래서 37정도 해주면 적당할듯*/
		border-radius: 4px 4px 0 0;
	}
	.gnb>ul>li.active>ul{
		display: block;
		left: 20px;
	}
	/*.gnb>ul>li.active>a{
		background: #fff !important;
		color: #000;
		font-weight: 700;
	} 와 같다.*/ 
	.gnb ul ul{
		position: absolute;
	}
	.gnb ul li:nth-child(3)>ul{
		left: 120px;

	}
	.gnb ul li:nth-child(2)>ul{
		left: 60px;

	}
	/*absolute가 아니면 서브 메뉴 넓이가 부모에게도 적용된다.*/
	.gnb li li{
		border: 0;
		display: inline-block;
	}
	.gnb li li>a{
		color: #666;
		line-height: 40px;
	}
	.body:after{
/*body를 선택하는 것이 아니고 body가 종료되기 직전의 마지막 자식을 선택한다는 의미. 하지만 실제존재하는 요소가 아니라 가상으로 만들어놓은 것을 선택. 그래서 가상요소 선택자. 여기서는 content라고 만든다.*/		
		content:""; /*content:""은 인라인이다. 그래서 clear:both가 안 먹힌다.*/
		display: block;
		clear: both;
	}
}

/* Tablet */
@media (min-width: 768px) and (max-width: 1024px){
	.body{
		padding-right: 200px;
	}
	main{
		float: left;
		width: 100%;
		/*여기서 100%는 부모 기준으로 100%*/
		margin-right: -180px;
	}
	.lnb,
	.aside{
		float: right;
		box-sizing: border-box;
		width: 180px;
		/*		
		box-sizing: border-box;
		width: 180px; 패딩 등등을 무시하고 무조건 180에 맞추기 위해서
		이것은 width값을 158픽셀로 해주는 것과 같다. 왜냐면 패딩보더 합쳐서 202픽셀이기 때문에
		*/
		position: relative;
		left: 200px;
		/**/
	}
}

/* Desktop */
@media (min-width: 1025px){
	.body{
		padding: 0 200px 0 220px;
	}
	main{
		width: 100%;
		margin-right: -100%;
		/*여기까지는 float이 안 되어 있기 때문에 lnb와 aside와 층이 달라서 음수 마진 공간이 무의미한 상태다
		float이 left이기 때문에 margin은 right로 준다. 만약 둘 다 left면 main박스가 한 쪽으로 붙어버린다.*/
		float: left;
	}
	.lnb{
		float: left;
		width: 200px;
		position: relative;
		left: -220px;
	}

	.aside{
		float: right;
		width: 158px;
		position: relative;
		left: 200px;
	}
	.container{
		max-width: 1280px;
		/*데스크톱 해상도가 너무 높을 때는 내용이 깨알같이 작아진다. 특히 main영역이 혼자서 넓어진다. main은 600 좌우가 좋다*/
		margin: 0 auto;
		position: relative; /*써치바의 위치를 결정하기 위해서*/
		padding: 0 10px;
	}
	.search{
		/*position은 이미 위에서 absolute로 적용되어 있다*/
		top: 0;
		right: 10px;
	}
}